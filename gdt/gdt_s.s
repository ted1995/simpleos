
;将 GDT 地址 载入 GDTR

[GLOBAL gdt_flush]

gdt_flush:
	mov eax, [esp+4]  ; 将gdt_flush的参数存入 eax 寄存器
	lgdt [eax]        ; 加载GDT基址到 GDTR [修改原先GRUB设置的GDTR]

	; CS 指向基地址为 0x00000000，限长为4G – 1的代码段描述符。
	; DS，SS，ES，FS 和 GS 指向基地址为0x00000000，限长为4G–1的数据段描述符。
	; 段寄存器也叫段选择子，其中存放的是段描述符在描述符表中的偏移地址，通过表基址加上偏移地址即可得到段描述符
	; 段描述符占8个字节，因此根据前面设置的全局描述符表可得各个段描述符的偏移地址
	; 第一个空描述符偏移为0x00
	; 第二个内核代码段描述符偏移为0x08
	; 第三个内核数据段描述符偏移为0x10
	; 第四个用户代码段描述符偏移为0x18
	; 第五个用户数据段描述符偏移为0x20
	; 当前全局描述符表中只有这五个段描述符

	;用内核数据段描述符的偏移初始化DS，SS，ES，FS 和 GS 段寄存器
	mov ax, 0x10      
	mov ds, ax        
	mov es, ax
	mov fs, ax
	mov gs, ax
	mov ss, ax
	; 此句使用CS：IP的格式进行跳转，跳转到内核代码段描述符的.flush语句处，而.flush语句执行ret，弹出调用gdt_flush语句的下一条语句的地址，放到IP中，结束汇编调用，继续向下运行
	jmp 0x08:.flush   	; 远跳转，0x08是我们的代码段描述符，通过此指令来更改CS段寄存器的值为内核代码段段描述符偏移
			  			; 远跳目的是清空流水线并串行化处理器
.flush:
	ret
